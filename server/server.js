const express = require('express');
const mysql = require('mysql2');
const cors = require('cors');
const { Rcon } = require('rcon-client');

const app = express();
app.use(cors());
app.use(express.json());

// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î
const db = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: 'ilovedb2025',
    database: 'minecraft_hospital'
});


// RCON-–∫–æ–Ω—Ñ—ñ–≥
const rconConfig = {
    host: '192.168.1.76',
    port: 25575,
    password: '22848'
};

const util = require('util');
const dbQuery = util.promisify(db.query).bind(db);

const potionMap = {
    '–®–≤–∏–¥–∫—ñ—Å—Ç—å': 'swiftness',
    '–ù—ñ—á–Ω–µ –±–∞—á–µ–Ω–Ω—è': 'night_vision',
    '–ú–∏—Ç—Ç—î–≤–µ –∑—Ü—ñ–ª–µ–Ω–Ω—è': 'healing',
    '–°–∏–ª–∞': 'strength',
    '–í–æ–≥–Ω–µ—Å—Ç—ñ–π–∫—ñ—Å—Ç—å': 'fire_resistance',
    '–í–æ–¥–Ω–µ –¥–∏—Ö–∞–Ω–Ω—è': 'water_breathing',
    '–°—Ç—Ä–∏–±—É—á—ñ—Å—Ç—å': 'leaping',
    '–ü–æ–≤—ñ–ª—å–Ω–µ –ø–∞–¥—ñ–Ω–Ω—è': 'slow_falling',
    '–†–µ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—è': 'regeneration',
    '–ù–µ–≤–∏–¥–∏–º—ñ—Å—Ç—å': 'invisibility'
};


db.connect(err => {
    if (err) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î:', err);
    } else {
        console.log('–ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MySQL');
    }
});


// –û—Ç—Ä–∏–º–∞—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Å–ø–∞–≤–Ω–ø–æ—ñ–Ω—Ç –∑–∞ –Ω—ñ–∫–Ω–µ–π–º–æ–º
app.get('/api/last-spawn/:nickname', (req, res) => {
    const { nickname } = req.params;
    db.query(
        'SELECT coordinates, set_date FROM spawnpoints WHERE nickname = ? ORDER BY set_date DESC LIMIT 1',
        [nickname],
        (err, results) => {
            if (err) return res.status(500).json({ error: '–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É –¥–æ –ë–î' });
            if (results.length === 0) return res.status(404).json({ message: '–°–ø–∞–≤–Ω–ø–æ—ñ–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' });
            res.json(results[0]);
        }
    );
});

// –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∑—ñ–ª–ª—è (—ñ –≤ –∞–¥–º—ñ–Ω —ñ –≤ —à–æ–ø—ñ)
app.get('/api/potions', (req, res) => {
    db.query('SELECT id, name, amount, effect FROM potions', (err, results) => {
        if (err) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É –¥–æ –ë–î (potions):", err);
            return res.status(500).json({ error: err.message });
        }
        res.json(results);
    });
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∑—ñ–ª–ª—è –Ω–∞ –∞–¥–º—ñ–Ω —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
app.post('/api/potions/update', (req, res) => {
    const { potionId, amount } = req.body;

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö
    if (typeof potionId !== 'number' || typeof amount !== 'number') {
        return res.status(400).json({ message: '–ù–µ–≤—ñ—Ä–Ω—ñ –¥–∞–Ω—ñ' });
    }

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∑—ñ–ª–ª—è –≤ –ë–î
    const query = 'UPDATE potions SET amount = ? WHERE id = ?';
    db.query(query, [amount, potionId], (err, results) => {
        if (err) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:', err);
            return res.status(500).send('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
        }
        if (results.affectedRows > 0) {
            res.status(200).send('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑—ñ–ª–ª—è –æ–Ω–æ–≤–ª–µ–Ω–∞');
        } else {
            res.status(404).send('–ó—ñ–ª–ª—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        }
    });
});


// üîπ –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä Minecraft —á–µ—Ä–µ–∑ RCON —ñ –∑–±–µ—Ä–µ–≥—Ç–∏ –≤ –ë–î
app.post('/api/rcon-command', async (req, res) => {
    const { host, port, password, command } = req.body;

    if (!command) {
        return res.status(400).json({ error: 'Command –Ω–µ –Ω–∞–¥–∞–Ω–æ!' });
    }

    const parts = command.split(" ");
    const nickname = parts[1];
    const coordinates = parts.slice(2).join(" "); // "X Y Z"

    try {
        const rcon = await Rcon.connect({ host, port, password });
        const response = await rcon.send(command);
        await rcon.end();

        // –ó–±–µ—Ä–µ–≥—Ç–∏ —É —Ç–∞–±–ª–∏—Ü—é spawnpoints
        db.query(
            'INSERT INTO spawnpoints (nickname, coordinates) VALUES (?, ?)',
            [nickname, coordinates],
            (err, result) => {
                if (err) {
                    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –≤ –ë–î:', err);
                    return res.status(500).json({ error: '–ö–æ–º–∞–Ω–¥—É –≤–∏–∫–æ–Ω–∞–Ω–æ, –∞–ª–µ –Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –ë–î' });
                }
                res.json({ response });
            }
        );

    } catch (err) {
        console.error('–ü–æ–º–∏–ª–∫–∞ RCON:', err);
        res.status(500).json({ error: '–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∫–æ–Ω–∞—Ç–∏ RCON-–∫–æ–º–∞–Ω–¥—É', details: err.message });
    }
});

// –í–∏–¥–∞—á–∞ –∑—ñ–ª–ª—è –∑–∞ –Ω—ñ–∫–Ω–µ–π–º–æ–º —á–µ—Ä–µ–∑ RCON
// –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ—Ç—Ä–∏–º—É—î –æ–¥–Ω—É —à—Ç—É–∫—É –∑—ñ–ª–ª—è

app.post('/api/give-potion/:id', async (req, res) => {
    const potionId = parseInt(req.params.id);
    const { nickname } = req.body;

    if (!nickname || isNaN(potionId)) {
        return res.status(400).json({ error: '–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ' });
    }

    try {
        // –û—Ç—Ä–∏–º–∞—Ç–∏ –∑—ñ–ª–ª—è –∑ –ë–î
        db.query('SELECT * FROM potions WHERE id = ?', [potionId], async (err, results) => {
            if (err) return res.status(500).json({ error: 'DB –ø–æ–º–∏–ª–∫–∞' });
            if (results.length === 0) return res.status(404).json({ error: '–ó—ñ–ª–ª—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' });

            const potion = results[0];

            if (potion.amount < 1) return res.status(400).json({ error: '–ó—ñ–ª–ª—è –∑–∞–∫—ñ–Ω—á–∏–ª–æ—Å—å' });

            const effectId = potionMap[potion.effect];
            if (!effectId) return res.status(500).json({ error: `–ù–µ–≤—ñ–¥–æ–º–∏–π –µ—Ñ–µ–∫—Ç: ${potion.effect}` });

            // –§–æ—Ä–º—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω—É –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤–∏–¥–∞—á—ñ –∑—ñ–ª–ª—è, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –Ω—ñ–∫–Ω–µ–π–º
            const command = `/give ${nickname} potion[potion_contents={potion:"${effectId}"}] 1`;

            // –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ —á–µ—Ä–µ–∑ RCON
            const rcon = await Rcon.connect(rconConfig);
            const response = await rcon.send(command);
            await rcon.end();

            // –ó–º–µ–Ω—à–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É –ë–î
            db.query('UPDATE potions SET amount = amount - 1 WHERE id = ?', [potionId], (err2) => {
                if (err2) console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ:', err2);
            });

            res.json({ message: `–ó—ñ–ª–ª—è "${potion.name}" –≤–∏–¥–∞–Ω–æ –≥—Ä–∞–≤—Ü—é ${nickname}`, response });
        });
    } catch (err) {
        console.error('‚ùó –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞—á—ñ –∑—ñ–ª–ª—è:', err);
        res.status(500).json({ error: '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', details: err.message });
    }
});

app.listen(5000, () => console.log('–°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –Ω–∞ –ø–æ—Ä—Ç—É 5000'));
